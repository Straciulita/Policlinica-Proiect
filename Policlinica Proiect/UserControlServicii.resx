<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        cQAAEnEB89x6jgAACVhJREFUWEfFVwlUVEcWVejl90qvNODSgoCIoJIDQYmCMQoa3EVFcFRwieKWUSYu
        MZ7EhUTjEpVFNCBqEAQzEUWj4L7hOFHHOOISFxRjnEQxLqG7AefOq88PJwue6dZE7znvfPj9q+6t9+q9
        etXkj0ZERERzvV4/SaFQbFWpVFfkcnm1WCQGPW1qtbqC3n+h0+mmBQUFmYUhLwZ+fn6vkKDPRc7i2nZB
        wRg1fSZS1ufh05IjyD1yGlmlR5GSswWJye+ifUhnODuL6kjsdh8fn1Bhij8HnTp1kmm12lVSKVc7YMRo
        5J/4GmX3a1FWVUNPZvR3g9H/VfXPwq/KMTjxLUik3BO93pgVFhamEqb840Bec+ek0jLvdu2x4eBJgbwW
        +27cxcKszYh9azI+zvsCB+/VIOm9RRgyLgnvr92I0uvfN4jOO3YG7YJCwHHcOV9fX09h6ueHp6enSSqV
        Xng9uj8OfPsjT/blN7cxjETJlWq4tvRE12EjMbPoADJuWTBhXQHChyfC3dMbnExJ3puA4guVNK4Oh757
        gKiYWEgkkor27ds/v0hKBHKc9ES3N/vj6PfVvLjlW4qgdzWhbecIJBeUIKOymoRZf2+VFszatg+B3XpC
        ozXgw5x8HCfPH7tn5UVynOzfvXr1UgtUzwbKxiXe/gHYT547TvvpvdS1kMkVGLFoJS8go5IJsSL9+kN8
        cOAsefEg3t9/BmnXHiC9QawFo5ZlQq5QInnxygZPsnAbDIZsgcpxeHl5BYglElvO/jLec58UFoMjcVPW
        f84TryFbdLwcEXEJUGp0EIulUKi1EEk4emrw2pCRmH/4XIPIv+bvgoxEfrRxCz/fZtqTLHEo1F0ESseg
        VCrzo2NH8llacvUODG5uiJu/jDxj48WNXZUNuUqF4DcHEvmXWH35Hr23IPVKFZILSxDafxh5TY1RS9Ia
        RA5bvAYanQE7L97iIzI4cTyoVu4VKO1HaGioSSQSWTcd+Ypf7V+mJsM3OAzpN+v32+pLVXDRmzAhI1cg
        /72xEDNvawwmLD93m95ZsOyGBebX3sDQsZNIYC2VoPMQicRP+vTp4ydQ2wda1Rgf/0DeewdvP4SaQjhl
        0/ZfC3hacvzWfvEd8/7Az0rJsyrsrbjLL54V8xYtWswWqO0DhXdTXNLbfBiW5hVB4+qO9BuPf038jDb5
        kgXalq2xICuXr6fsxKFkKRGo7QOVlpPvr8nhBY6ePguhfQY3Sua4WTDtsgVtB42i4j6F9+CHGwrRrFmz
        RwK1fZBIpN+mbS/h90nkoFhET5vVCJnjxpJo8jcWdJq+AOG9+vICs/ceg4KyW6C2D7Rx73xaeoSfgE00
        aPbCRgkdNZY44ynEYXOX49Xw7rwDco+eZg2FYwKZB1OLSniBUYOHI3rKzEYJHTIq6Mtv2pB40YLQtz9A
        RO/+NH8d3/3QnndMoIyTnZqXls2vMPFvcxBCta5RUofMgrnXLEi4aIXfgBGIS5rGz5+yPh/ePt5PBGr7
        QCvKZs0Aa5dWFOyEC9Wy9IpHjZDab2nkwfGXrEgsr4bGw4yUDQX8/KyfdHV13SNQ2wej0Zjg6duWDvca
        HLrzGFqDEZOytjZKbK/NumrDaPJe3/W7oFS7YH9lFV9m/Knp9fDwSBao7UPPnj1dxWKxNWffcX4fjqFa
        5dkhmGrhT42S/z9LqSDPkTjmveYhXRFPNZbNm1d2FnRNeBIdHe0lUNsPjUaX13PgUL4W7r1xD+7NzRg8
        a36jAp5mLGsXCuISKDm6zF0Kg8kNu+lsZ+HtFz+SncXFAqVjCAgI8CMv1qzddZBfbcaOvXyrNS5tIxFT
        q/UbMb80JiyV9tzsq/VJwSwqrZC6ISU+KdjBz7fhwD9A14e6jh07hgiUjoOOoBSztw9KqbVnk6ZkbyaR
        SvR5ZwEWX3tM57FNEMUEW/izdtlNK94lYeMEYQnlP6HL7I8hlasxLz2Ln2f/rR/Rms56mj9VoHo2tGnT
        ppuTk9N/O3WPxOE7j+o9WVxK4W4Jt8AQ9E4vxMTzDzHpshVJZGOpCP/ssYTzj9FrbRE8XukMo5s7Vm0t
        5sezzjy8d1/QzfDMjBkzFAKV/QDQlNqtVnRRiqAQ3x+XNBV+bf3BRJYKHQjbk4nJc6DTG6GgEuQTNQjR
        63ZQllrQfcl6+PSKgcrVAy5aHUZOS0bJtf/w4/ZV3ufF0TX0Wo8ePVoKlPaDspfGKujOK4JTU2ckjJ+I
        8srvMGbCZDqOnGFu7YNM2pMscRjhIfIqq5NjqJgvzt+G0rtWTP9oJd9gLMsv4ls19h1r29iZ29rPn50a
        p7p27dpCoLQfAZ4BJoVc8c/QDhpcORyEuH4eMHu2xqixdKeVSB+Eh4f3dnNzW8IS540BMTwhq5P19+L6
        q2W91fAnBFvECfptw6GT6D10BJuj1qg3roiJiZEJlPbDbPb14yTc1WYmF9w9G4TaK/6oPqvF8GgNmpIn
        6bIdKXzKLvCBVPm30tXR1srHD0PHJ9FlKgurt+3G2j2HkVq0m0+G4ROmksfaQSQW21xcNAUdOnToKEzh
        GFq1ah5BZHdHdtPDbJBhzDB3WM/pUHeOw6XdOoicRKBV+wufNyA2NtbDbDZPdHd336px0ZSrVS4P5TJ5
        NT0fqZSqrylDC8njE6KiotyFIY7DZDINlUqk1YvijLDmGXFhhQlmPYfEGDV+KHNBSICcCql+J0scYchT
        Qd+IyMTsKbx6LjSl8/YdFcfVfTbFhJrNRtRuNqAmW4bzC+QkUgoPVxWVAs3p+Pj457tcO4ohQ4Y4q9Uu
        Kw1qDnvnuaHuZ3E5StSsaQrrGgniw9SgcFVERkY6nm3Pg379+qkoU//e2iTHv5a68p7jvbdRTeKcYCOb
        P1AFqYSrCg4ODhCGvRh4e3urZTLZ8Ve9FbiRUR9WXtwmDS+OWc4YJWRSzhYYGNhDGPbiIJfLl3f2VaAq
        20QhZWElgbla2DKdYc10wp4ZSqg46RNayAhhyIsFJ+XuFM9kYTXUC8zVw7ZWRAKdcHqeAgaVlF3/5gif
        v3hIxJy1bJEbL64ul5JinYQXd32JFJ5GDm4mj3X2lJM/DbT/SmfQyWBbL0cNhZXtuR9WShBs5lit25WZ
        mSkWPn05oPB1kkoklumRKhybrcC2yUqEeHFQqzWnqPQohc9eLry8vLpotdoTcmo6tVqdhYp1Jh1jOuHn
        l4gmTf4HP7Zh29DRYKIAAAAASUVORK5CYII=
</value>
  </data>
</root>